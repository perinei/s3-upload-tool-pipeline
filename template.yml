AWSTemplateFormatVersion: "2010-09-09"
Description: 'Template Pipeline for SAM S3 Upload Tool Backend;'

################# CODE COMMIT AS SOURCE

###### METADATA ###################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Project"
        Parameters:
          - pProjectName
      -
        Label:
          default: "SAM Repository"
        Parameters:
          - pPipelineRepo

    ParameterLabels:
      pProjectName:
        default: "Project Name"
      pPipelineRepo:
        default: "Repository Name"

Parameters:

  pPipelineRepo:
    Type: String
    Default: ''
    Description: CodeCommit Pipeline Repo

  pProjectName:
    Type: String
    Default: ''

Mappings: 
  repo:
    branch:
      Name: main

Resources:

  rCodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
    # Properties:
    #   BucketName: !Sub '${pProjectName}-${pEnvironment}-cp-artifact'

  rCodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref rCodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join
              - ''
              - - !GetAtt
                  - rCodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join
              - ''
              - - !GetAtt
                  - rCodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false

  rAppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Ref pProjectName
      RoleArn: !GetAtt
        - rCodePipelineServiceRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SAMConfig
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
                # Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SAMConfig
              Configuration:
                BranchName: !FindInMap [repo, branch, Name]
                RepositoryName: !Ref pPipelineRepo
                PollForSourceChanges: true
              # Configuration:
                # ConnectionArn: !Ref pConnectionArn
                # FullRepositoryId: !Ref pFullRepositoryId
                # BranchName: !Ref pEnvironment
                # OutputArtifactFormat: "CODEBUILD_CLONE_REF"
                # OutputArtifactFormat: "CODE_ZIP"

              RunOrder: 1
        - Name: Build_and_Deploy
          Actions:
            - Name: Build_and_Deploy
              InputArtifacts:
                - Name: SAMConfig
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pProjectName
                PrimarySource: SAMConfig
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref rCodePipelineArtifactStoreBucket
 
  rCodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'

              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'

              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource:
                  - !GetAtt rCodePipelineArtifactStoreBucket.Arn
                  - !Sub '${rCodePipelineArtifactStoreBucket.Arn}/*'

  # rSamCliSourceBucketBucketPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     Bucket: !Ref rCodePipelineArtifactStoreBucket
  #     PolicyDocument:
  #       Version: 2012-10-17
  #       Statement:
  #         - Sid: DenyUnEncryptedObjectUploads
  #           Effect: Deny
  #           Principal: '*'
  #           Action: 's3:PutObject'
  #           Resource: !Join
  #             - ''
  #             - - !GetAtt
  #                 - rCodePipelineArtifactStoreBucket
  #                 - Arn
  #               - /*
  #           Condition:
  #             StringNotEquals:
  #               's3:x-amz-server-side-encryption': 'aws:kms'
  #         - Sid: DenyInsecureConnections
  #           Effect: Deny
  #           Principal: '*'
  #           Action: 's3:*'
  #           Resource: !Join
  #             - ''
  #             - - !GetAtt
  #                 - rCodePipelineArtifactStoreBucket
  #                 - Arn
  #               - /*
  #           Condition:
  #             Bool:
  #               'aws:SecureTransport': false


  rCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${pProjectName}-lambda-cb-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
  rCodeBuildServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeBuildServicePolicy
      Roles:
        - !Ref rCodeBuildServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          - Effect: Allow
            Action:
              - 'cognito-idp:*'
              - 'amplify:*'
              - 'codebuild:*'
              - 's3:DeleteBucketPolicy'
              - 'codepipeline:DeletePipeline'
              - 's3:DeleteBucket'
            Resource: '*'

          - Effect: Allow
            Action:
              - 'codestar-connections:UseConnection'
            Resource: '*'

          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${rCodePipelineArtifactStoreBucket}/*"
          - Effect: Allow
            Action:
              - cloudformation:CreateChangeSet
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteStack
              - cloudformation:DescribeChangeSet
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStacks
              - cloudformation:ExecuteChangeSet
              - cloudformation:GetTemplateSummary
            Resource:
              - arn:aws:cloudformation:*:aws:transform/Serverless-2016-10-31
              - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/*"
          - Sid: Lambda
            Effect: Allow
            Action:
              - lambda:AddPermission
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:GetFunction
              - lambda:GetFunctionConfiguration
              - lambda:ListTags
              - lambda:RemovePermission
              - lambda:TagResource
              - lambda:UntagResource
              - lambda:UpdateFunctionCode
              - lambda:UpdateFunctionConfiguration
            Resource:
              - !Sub "arn:aws:lambda:*:${AWS::AccountId}:function:*"

          - Sid: LambdaLayer
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
            Resource:
              - "*"

          - Sid: IAM
            Effect: Allow
            Action:
              - iam:*
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:role/*"
          - Sid: APIGateway
            Effect: Allow
            Action:
              - apigateway:DELETE
              - apigateway:GET
              - apigateway:PATCH
              - apigateway:POST
              - apigateway:PUT
            Resource:
              - arn:aws:apigateway:*::*
          - Sid: S3
            Effect: Allow
            Action:
              - s3:CreateBucket
              - s3:GetObject
              - s3:PutObject
            Resource:
              - '*'
          - Sid: SG
            Effect: Allow
            Action:
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - ec2:CreateSecurityGroup
              - ec2:DeleteSecurityGroup
              - ec2:DescribeSecurityGroups
              - ec2:CreateTags
              - ec2:RevokeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:RevokeSecurityGroupIngress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - wafv2:*
              - apigateway:SetWebACL
            Resource: '*'
  rCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref pProjectName
      ServiceRole: !GetAtt rCodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        # ComputeType options: BUILD_GENERAL1_SMALL, BUILD_GENERAL1_MEDIUM, BUILD_GENERAL1_LARGE
        ComputeType: BUILD_GENERAL1_SMALL
        # Run `aws codebuild list-curated-environment-images` for a complete list of images provided.
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: BUILD_ARTIFACT_BUCKET
            Value: !Ref rCodePipelineArtifactStoreBucket
          - Name: STACK_NAME
            Value: !Sub "${pProjectName}-api"
          - Name: PROJECT_NAME
            Value: !Sub "${pProjectName}"
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 15

  rAmazonCloudWatchEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'codepipeline:StartPipelineExecution'
                Resource: !Join
                  - ''
                  - - 'arn:aws:codepipeline:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':'
                    - !Ref rAppPipeline